// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FingerprintProtocol.proto

package com.openchat.protocal.fingerprint;

public final class FingerprintProtos {
  private FingerprintProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface FingerprintDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bytes publicKey = 1;
    
    boolean hasPublicKey();
    
    com.google.protobuf.ByteString getPublicKey();

    // optional bytes identifier = 2;
    
    boolean hasIdentifier();
    
    com.google.protobuf.ByteString getIdentifier();
  }
  
  public static final class FingerprintData extends
      com.google.protobuf.GeneratedMessage
      implements FingerprintDataOrBuilder {
    // Use FingerprintData.newBuilder() to construct.
    private FingerprintData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FingerprintData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FingerprintData defaultInstance;
    public static FingerprintData getDefaultInstance() {
      return defaultInstance;
    }

    public FingerprintData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FingerprintData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              publicKey_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              identifier_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.openchat.protocal.fingerprint.FingerprintProtos.internal_static_secureim_FingerprintData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.openchat.protocal.fingerprint.FingerprintProtos.internal_static_secureim_FingerprintData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.class, com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.Builder.class);
    }

    public static com.google.protobuf.Parser<FingerprintData> PARSER =
        new com.google.protobuf.AbstractParser<FingerprintData>() {
      public FingerprintData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FingerprintData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FingerprintData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bytes publicKey = 1;
    public static final int PUBLICKEY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString publicKey_;
    
    public boolean hasPublicKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    
    public com.google.protobuf.ByteString getPublicKey() {
      return publicKey_;
    }

    // optional bytes identifier = 2;
    public static final int IDENTIFIER_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString identifier_;
    
    public boolean hasIdentifier() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    
    public com.google.protobuf.ByteString getIdentifier() {
      return identifier_;
    }

    private void initFields() {
      publicKey_ = com.google.protobuf.ByteString.EMPTY;
      identifier_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, publicKey_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, identifier_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, publicKey_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, identifier_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.openchat.protocal.fingerprint.FingerprintProtos.internal_static_secureim_FingerprintData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.openchat.protocal.fingerprint.FingerprintProtos.internal_static_secureim_FingerprintData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.class, com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.Builder.class);
      }

      // Construct using com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        publicKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        identifier_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.openchat.protocal.fingerprint.FingerprintProtos.internal_static_secureim_FingerprintData_descriptor;
      }

      public com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData getDefaultInstanceForType() {
        return com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
      }

      public com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData build() {
        com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData buildPartial() {
        com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData result = new com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.publicKey_ = publicKey_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.identifier_ = identifier_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData) {
          return mergeFrom((com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData other) {
        if (other == com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance()) return this;
        if (other.hasPublicKey()) {
          setPublicKey(other.getPublicKey());
        }
        if (other.hasIdentifier()) {
          setIdentifier(other.getIdentifier());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bytes publicKey = 1;
      private com.google.protobuf.ByteString publicKey_ = com.google.protobuf.ByteString.EMPTY;
      
      public boolean hasPublicKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      
      public com.google.protobuf.ByteString getPublicKey() {
        return publicKey_;
      }
      
      public Builder setPublicKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        publicKey_ = value;
        onChanged();
        return this;
      }
      
      public Builder clearPublicKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        publicKey_ = getDefaultInstance().getPublicKey();
        onChanged();
        return this;
      }

      // optional bytes identifier = 2;
      private com.google.protobuf.ByteString identifier_ = com.google.protobuf.ByteString.EMPTY;
      
      public boolean hasIdentifier() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      
      public com.google.protobuf.ByteString getIdentifier() {
        return identifier_;
      }
      
      public Builder setIdentifier(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        identifier_ = value;
        onChanged();
        return this;
      }
      
      public Builder clearIdentifier() {
        bitField0_ = (bitField0_ & ~0x00000002);
        identifier_ = getDefaultInstance().getIdentifier();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:secureim.FingerprintData)
    }

    static {
      defaultInstance = new FingerprintData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:secureim.FingerprintData)
  }

  public interface CombinedFingerprintOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 version = 1;
    
    boolean hasVersion();
    
    int getVersion();

    // optional .secureim.FingerprintData localFingerprint = 2;
    
    boolean hasLocalFingerprint();
    
    com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData getLocalFingerprint();
    
    com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder getLocalFingerprintOrBuilder();

    // optional .secureim.FingerprintData remoteFingerprint = 3;
    
    boolean hasRemoteFingerprint();
    
    com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData getRemoteFingerprint();
    
    com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder getRemoteFingerprintOrBuilder();
  }
  
  public static final class CombinedFingerprint extends
      com.google.protobuf.GeneratedMessage
      implements CombinedFingerprintOrBuilder {
    // Use CombinedFingerprint.newBuilder() to construct.
    private CombinedFingerprint(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CombinedFingerprint(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CombinedFingerprint defaultInstance;
    public static CombinedFingerprint getDefaultInstance() {
      return defaultInstance;
    }

    public CombinedFingerprint getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CombinedFingerprint(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              version_ = input.readUInt32();
              break;
            }
            case 18: {
              com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = localFingerprint_.toBuilder();
              }
              localFingerprint_ = input.readMessage(com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(localFingerprint_);
                localFingerprint_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = remoteFingerprint_.toBuilder();
              }
              remoteFingerprint_ = input.readMessage(com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(remoteFingerprint_);
                remoteFingerprint_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.openchat.protocal.fingerprint.FingerprintProtos.internal_static_secureim_CombinedFingerprint_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.openchat.protocal.fingerprint.FingerprintProtos.internal_static_secureim_CombinedFingerprint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint.class, com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint.Builder.class);
    }

    public static com.google.protobuf.Parser<CombinedFingerprint> PARSER =
        new com.google.protobuf.AbstractParser<CombinedFingerprint>() {
      public CombinedFingerprint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CombinedFingerprint(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CombinedFingerprint> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 version = 1;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    
    public int getVersion() {
      return version_;
    }

    // optional .secureim.FingerprintData localFingerprint = 2;
    public static final int LOCALFINGERPRINT_FIELD_NUMBER = 2;
    private com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData localFingerprint_;
    
    public boolean hasLocalFingerprint() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    
    public com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData getLocalFingerprint() {
      return localFingerprint_;
    }
    
    public com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder getLocalFingerprintOrBuilder() {
      return localFingerprint_;
    }

    // optional .secureim.FingerprintData remoteFingerprint = 3;
    public static final int REMOTEFINGERPRINT_FIELD_NUMBER = 3;
    private com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData remoteFingerprint_;
    
    public boolean hasRemoteFingerprint() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    
    public com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData getRemoteFingerprint() {
      return remoteFingerprint_;
    }
    
    public com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder getRemoteFingerprintOrBuilder() {
      return remoteFingerprint_;
    }

    private void initFields() {
      version_ = 0;
      localFingerprint_ = com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
      remoteFingerprint_ = com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, localFingerprint_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, remoteFingerprint_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, localFingerprint_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, remoteFingerprint_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprintOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.openchat.protocal.fingerprint.FingerprintProtos.internal_static_secureim_CombinedFingerprint_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.openchat.protocal.fingerprint.FingerprintProtos.internal_static_secureim_CombinedFingerprint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint.class, com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint.Builder.class);
      }

      // Construct using com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLocalFingerprintFieldBuilder();
          getRemoteFingerprintFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        version_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (localFingerprintBuilder_ == null) {
          localFingerprint_ = com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
        } else {
          localFingerprintBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (remoteFingerprintBuilder_ == null) {
          remoteFingerprint_ = com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
        } else {
          remoteFingerprintBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.openchat.protocal.fingerprint.FingerprintProtos.internal_static_secureim_CombinedFingerprint_descriptor;
      }

      public com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint getDefaultInstanceForType() {
        return com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint.getDefaultInstance();
      }

      public com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint build() {
        com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint buildPartial() {
        com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint result = new com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (localFingerprintBuilder_ == null) {
          result.localFingerprint_ = localFingerprint_;
        } else {
          result.localFingerprint_ = localFingerprintBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (remoteFingerprintBuilder_ == null) {
          result.remoteFingerprint_ = remoteFingerprint_;
        } else {
          result.remoteFingerprint_ = remoteFingerprintBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint) {
          return mergeFrom((com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint other) {
        if (other == com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasLocalFingerprint()) {
          mergeLocalFingerprint(other.getLocalFingerprint());
        }
        if (other.hasRemoteFingerprint()) {
          mergeRemoteFingerprint(other.getRemoteFingerprint());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.openchat.protocal.fingerprint.FingerprintProtos.CombinedFingerprint) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 version = 1;
      private int version_ ;
      
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      
      public int getVersion() {
        return version_;
      }
      
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }
      
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 0;
        onChanged();
        return this;
      }

      // optional .secureim.FingerprintData localFingerprint = 2;
      private com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData localFingerprint_ = com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData, com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.Builder, com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder> localFingerprintBuilder_;
      
      public boolean hasLocalFingerprint() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      
      public com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData getLocalFingerprint() {
        if (localFingerprintBuilder_ == null) {
          return localFingerprint_;
        } else {
          return localFingerprintBuilder_.getMessage();
        }
      }
      
      public Builder setLocalFingerprint(com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData value) {
        if (localFingerprintBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          localFingerprint_ = value;
          onChanged();
        } else {
          localFingerprintBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      
      public Builder setLocalFingerprint(
          com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.Builder builderForValue) {
        if (localFingerprintBuilder_ == null) {
          localFingerprint_ = builderForValue.build();
          onChanged();
        } else {
          localFingerprintBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      
      public Builder mergeLocalFingerprint(com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData value) {
        if (localFingerprintBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              localFingerprint_ != com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance()) {
            localFingerprint_ =
              com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.newBuilder(localFingerprint_).mergeFrom(value).buildPartial();
          } else {
            localFingerprint_ = value;
          }
          onChanged();
        } else {
          localFingerprintBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      
      public Builder clearLocalFingerprint() {
        if (localFingerprintBuilder_ == null) {
          localFingerprint_ = com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
          onChanged();
        } else {
          localFingerprintBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.Builder getLocalFingerprintBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getLocalFingerprintFieldBuilder().getBuilder();
      }
      
      public com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder getLocalFingerprintOrBuilder() {
        if (localFingerprintBuilder_ != null) {
          return localFingerprintBuilder_.getMessageOrBuilder();
        } else {
          return localFingerprint_;
        }
      }
      
      private com.google.protobuf.SingleFieldBuilder<
          com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData, com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.Builder, com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder> 
          getLocalFingerprintFieldBuilder() {
        if (localFingerprintBuilder_ == null) {
          localFingerprintBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData, com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.Builder, com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder>(
                  localFingerprint_,
                  getParentForChildren(),
                  isClean());
          localFingerprint_ = null;
        }
        return localFingerprintBuilder_;
      }

      // optional .secureim.FingerprintData remoteFingerprint = 3;
      private com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData remoteFingerprint_ = com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData, com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.Builder, com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder> remoteFingerprintBuilder_;
      
      public boolean hasRemoteFingerprint() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      
      public com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData getRemoteFingerprint() {
        if (remoteFingerprintBuilder_ == null) {
          return remoteFingerprint_;
        } else {
          return remoteFingerprintBuilder_.getMessage();
        }
      }
      
      public Builder setRemoteFingerprint(com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData value) {
        if (remoteFingerprintBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          remoteFingerprint_ = value;
          onChanged();
        } else {
          remoteFingerprintBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      
      public Builder setRemoteFingerprint(
          com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.Builder builderForValue) {
        if (remoteFingerprintBuilder_ == null) {
          remoteFingerprint_ = builderForValue.build();
          onChanged();
        } else {
          remoteFingerprintBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      
      public Builder mergeRemoteFingerprint(com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData value) {
        if (remoteFingerprintBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              remoteFingerprint_ != com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance()) {
            remoteFingerprint_ =
              com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.newBuilder(remoteFingerprint_).mergeFrom(value).buildPartial();
          } else {
            remoteFingerprint_ = value;
          }
          onChanged();
        } else {
          remoteFingerprintBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      
      public Builder clearRemoteFingerprint() {
        if (remoteFingerprintBuilder_ == null) {
          remoteFingerprint_ = com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
          onChanged();
        } else {
          remoteFingerprintBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.Builder getRemoteFingerprintBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRemoteFingerprintFieldBuilder().getBuilder();
      }
      
      public com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder getRemoteFingerprintOrBuilder() {
        if (remoteFingerprintBuilder_ != null) {
          return remoteFingerprintBuilder_.getMessageOrBuilder();
        } else {
          return remoteFingerprint_;
        }
      }
      
      private com.google.protobuf.SingleFieldBuilder<
          com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData, com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.Builder, com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder> 
          getRemoteFingerprintFieldBuilder() {
        if (remoteFingerprintBuilder_ == null) {
          remoteFingerprintBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData, com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintData.Builder, com.openchat.protocal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder>(
                  remoteFingerprint_,
                  getParentForChildren(),
                  isClean());
          remoteFingerprint_ = null;
        }
        return remoteFingerprintBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:secureim.CombinedFingerprint)
    }

    static {
      defaultInstance = new CombinedFingerprint(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:secureim.CombinedFingerprint)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_secureim_FingerprintData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_secureim_FingerprintData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_secureim_CombinedFingerprint_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_secureim_CombinedFingerprint_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {""};
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_secureim_FingerprintData_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_secureim_FingerprintData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_secureim_FingerprintData_descriptor,
              new java.lang.String[] { "PublicKey", "Identifier", });
          internal_static_secureim_CombinedFingerprint_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_secureim_CombinedFingerprint_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_secureim_CombinedFingerprint_descriptor,
              new java.lang.String[] { "Version", "LocalFingerprint", "RemoteFingerprint", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
